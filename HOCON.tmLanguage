<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>fileTypes</key>
  <array>
    <string>conf</string>
  </array>
  <key>foldingStartMarker</key>
  <string>(?x:       # turn on extended mode
                          ^        # a line beginning with
                          \s*      # some optional space
                          [{\[]    # the start of an object or array
                          (?!      # but not followed by
                            .*     # whatever
                            [}\]]  # and the close of an object or array
                            ,?     # an optional comma
                            \s*    # some optional space
                            $      # at the end of the line
                          )
                          |        # ...or...
                          [{\[]    # the start of an object or array
                          \s*      # some optional space
                          $        # at the end of the line
                        )</string>
  <key>foldingStopMarker</key>
  <string>(?x:     # turn on extended mode
                         ^      # a line beginning with
                         \s*    # some optional space
                         [}\]]  # and the close of an object or array
                       )</string>
  <key>keyEquivalent</key>
  <string>^~H</string>
  <key>name</key>
  <string>HOCON</string>
  <key>patterns</key>
  <array>
    <dict>
      <key>include</key>
      <string>#value</string>
    </dict>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#item-name</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#object</string>
        </dict>
      </array>
    </dict>
  </array>
  <key>repository</key>
  <dict>
    <key>list</key>
    <dict>
      <key>begin</key>
      <string>\[</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.list.begin.hocon</string>
        </dict>
      </dict>
      <key>end</key>
      <string>\]</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.list.end.hocon</string>
        </dict>
      </dict>
      <key>name</key>
      <string>meta.structure.list.hocon</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#value</string>
        </dict>
        <dict>
          <key>match</key>
          <string>,</string>
          <key>name</key>
          <string>punctuation.separator.list.hocon</string>
        </dict>
        <dict>
          <key>match</key>
          <string>[^\s\]]</string>
          <key>name</key>
          <string>invalid.illegal.expected-list-separator.hocon</string>
        </dict>
      </array>
    </dict>
    <key>constant</key>
    <dict>
      <key>match</key>
      <string>\b(?:true|false|on|off|yes|no|null)\b</string>
      <key>name</key>
      <string>constant.language.hocon</string>
    </dict>
    <key>number</key>
    <dict>
      <key>comment</key>
      <string>handles integer and decimal numbers</string>
      <key>match</key>
      <string>(?x:         # turn on extended mode
                   -?         # an optional minus
                   (?:
                     0        # a zero
                     |        # ...or...
                     [1-9]    # a 1-9 character
                     \d*      # followed by zero or more digits
                   )
                   (?:
                     (?:
                       \.     # a period
                       \d+    # followed by one or more digits
                     )?
                     (?:
                       [eE]   # an e character
                       [+-]?  # followed by an option +/-
                       \d+    # followed by one or more digits
                     )?       # make exponent optional
                   )?         # make decimal portion optional
                 )</string>
      <key>name</key>
      <string>constant.numeric.hocon</string>
    </dict>
    <key>object</key>
    <dict>
      <key>begin</key>
      <string>\{</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.dictionary.begin.hocon</string>
        </dict>
      </dict>
      <key>comment</key>
      <string>a HOCON object</string>
      <key>end</key>
      <string>\}</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.dictionary.end.hocon</string>
        </dict>
      </dict>
      <key>name</key>
      <string>meta.structure.dictionary.hocon</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>comment</key>
          <string>the HOCON object key</string>
          <key>include</key>
          <string>#item-name</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#comments</string>
        </dict>
        <dict>
          <key>begin</key>
          <string>(?:=|:)?</string>
          <key>beginCaptures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>punctuation.separator.dictionary.key-value.hocon</string>
            </dict>
          </dict>
          <key>end</key>
          <string>(,)?</string>
          <key>endCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>punctuation.separator.dictionary.pair.hocon</string>
            </dict>
          </dict>
          <key>name</key>
          <string>meta.structure.dictionary.value.hocon</string>
          <key>patterns</key>
          <array>
            <dict>
              <key>comment</key>
              <string>the HOCON object value</string>
              <key>include</key>
              <string>#value</string>
            </dict>
          </array>
        </dict>
        <dict>
          <key>match</key>
          <string>[^\s\}]</string>
          <key>name</key>
          <string>invalid.illegal.expected-dictionary-separator.hocon</string>
        </dict>
      </array>
    </dict>
    <key>substitution</key>
    <dict>
      <key>begin</key>
      <string>(\$\{\??)</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.substitution.start.hocon</string>
        </dict>
      </dict>
      <key>end</key>
      <string>(\})</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.substitution.end.hocon</string>
        </dict>
      </dict>
      <key>name</key>
      <string>variable.other.substitution.hocon</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#item-name</string>
        </dict>
      </array>
    </dict>
    <key>item-name</key>
    <dict>
      <key>match</key>
      <string>([a-zA-Z][a-zA-Z0-9._$-]*)</string>
      <key>name</key>
      <string>entity.other.attribute-name.hocon</string>
    </dict>
    <key>multiline-string</key>
    <dict>
      <key>begin</key>
      <string>"""</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.string.begin.hocon</string>
        </dict>
      </dict>
      <key>end</key>
      <string>"""</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.string.end.hocon</string>
        </dict>
      </dict>
      <key>name</key>
      <string>string.quoted.triple.hocon</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>match</key>
          <string>(?x:                # turn on extended mode
                     \\                # a literal backslash
                     (?:               # ...followed by...
                       ["\\/bfnrt]     # one of these characters
                       |               # ...or...
                       u               # a u
                       [0-9a-fA-F]{4}  # and four hex digits
                     )
                   )</string>
          <key>name</key>
          <string>constant.character.escape.hocon</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\\.</string>
          <key>name</key>
          <string>invalid.illegal.unrecognized-string-escape.hocon</string>
        </dict>
      </array>
    </dict>
    <key>string</key>
    <dict>
      <key>begin</key>
      <string>"</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.string.begin.hocon</string>
        </dict>
      </dict>
      <key>end</key>
      <string>"</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.string.end.hocon</string>
        </dict>
      </dict>
      <key>name</key>
      <string>string.quoted.double.hocon</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>match</key>
          <string>(?x:                # turn on extended mode
                     \\                # a literal backslash
                     (?:               # ...followed by...
                       ["\\/bfnrt]     # one of these characters
                       |               # ...or...
                       u               # a u
                       [0-9a-fA-F]{4}  # and four hex digits
                     )
                   )</string>
          <key>name</key>
          <string>constant.character.escape.hocon</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\\.</string>
          <key>name</key>
          <string>invalid.illegal.unrecognized-string-escape.hocon</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\n</string>
          <key>name</key>
          <string>invalid.illegal.string-containing-newline.hocon</string>
        </dict>
      </array>
    </dict>
    <key>value</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#constant</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#number</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#multiline-string</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#string</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#list</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#object</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#comments</string>
        </dict>
      </array>
    </dict>
    <key>comments</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.comment.hocon</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(//).*$\n?</string>
          <key>name</key>
          <string>comment.line.double-slash.hocon</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.comment.hocon</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(#).*$\n?</string>
          <key>name</key>
          <string>comment.line.number-sign.hocon</string>
        </dict>
      </array>
    </dict>
  </dict>
  <key>scopeName</key>
  <string>source.hocon</string>
  <key>uuid</key>
  <string>825e189b-ae2a-47e0-964a-e4765aeadb7b</string>
</dict>
</plist>
